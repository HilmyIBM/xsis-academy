CREATE DATABASE "DB_Sales";

-- setup table SALESPERSON

CREATE TABLE "SALESPERSON" (
    "ID" SERIAL PRIMARY KEY,
    "NAME" VARCHAR(50) NOT NULL,
    "BOD" DATE,
    "SALARY" DECIMAL(18, 2)
)


INSERT INTO "SALESPERSON"("NAME", "BOD", "SALARY") 
VALUES
('Abe', '9/11/1988', 140000),
('Bob', '9/11/1978', 44000),
('Chris', '9/11/1983', 40000),
('Dan', '9/11/1980', 52000),
('Ken', '9/11/1977', 115000),
('Joe', '9/11/1990', 38000);


SELECT * FROM "SALESPERSON";


DROP TABLE "SALESPERSON";


-- setup table ORDERS

CREATE TABLE "ORDERS"(
    "ID" SERIAL PRIMARY KEY,
    "ORDER_DATE" date,
    "CUST_ID" INTEGER,
    "SALESPERSON_ID" INTEGER REFERENCES "SALESPERSON"("ID"),
    "AMOUNT" DECIMAL(18, 2)
);

INSERT INTO "ORDERS" ("ORDER_DATE", "CUST_ID", "SALESPERSON_ID", "AMOUNT")
VALUES
('8/2/2020', 4, 2, 540),
('1/22/2021', 4, 5, 1800),
('7/14/2019', 9, 1, 460),
('1/29/2018', 7, 2, 2400),
('2/3/2021', 6, 4, 600),
('3/2/2020', 6, 4, 720),
('5/6/2021', 9, 4, 150);

SELECT * FROM "ORDERS";



--soal a
SELECT S."NAME", COUNT(O)
FROM "SALESPERSON" AS S 
INNER JOIN "ORDERS" AS O ON S."ID" = O."SALESPERSON_ID"
GROUP BY S."NAME"
HAVING COUNT(O) > 1;


--soal b
SELECT S."NAME", SUM(O."AMOUNT") AS "Order Amount"
FROM "SALESPERSON" AS S 
INNER JOIN "ORDERS" AS O ON S."ID" = O."SALESPERSON_ID"
GROUP BY S."NAME"
HAVING SUM(O."AMOUNT") > 1000
ORDER BY SUM(O."AMOUNT") DESC;


--soal c
SELECT S."NAME", EXTRACT (YEAR FROM AGE(S."BOD")) AS "Umur", S."SALARY", SUM(CASE 
            WHEN EXTRACT(YEAR FROM O."ORDER_DATE") >= 2020 THEN O."AMOUNT" 
            ELSE 0 
        END) AS "Order Amount"
FROM "SALESPERSON" AS S 
INNER JOIN "ORDERS" AS O ON S."ID" = O."SALESPERSON_ID"
WHERE EXTRACT(YEAR FROM O."ORDER_DATE") >= 2020 
GROUP BY S."NAME", AGE(S."BOD"), S."SALARY"
ORDER BY EXTRACT (YEAR FROM AGE(S."BOD")) ASC;

