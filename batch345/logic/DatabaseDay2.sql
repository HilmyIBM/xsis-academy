CREATE TABLE ARTIS (
	KD_ARTIS VARCHAR(100) PRIMARY KEY,
	NM_ARTIS VARCHAR(100) NOT NULL,
	JK VARCHAR(100) NOT NULL,
	BAYARAN INTEGER NOT NULL,
	AWARD INTEGER NOT NULL,
	NEGARA VARCHAR(100) NOT NULL
);

CREATE TABLE FILE (
	KD_FILM VARCHAR(10) PRIMARY KEY,
	NM_FILM VARCHAR(55) NOT NULL,
	GENRE VARCHAR(55) NOT NULL,
	ARTIS VARCHAR(55) NOT NULL,
	PRODUSER VARCHAR(55) NOT NULL,
	PENDAPATAN INTEGER NOT NULL,
	NOMINASI INTEGER NOT NULL
);

CREATE TABLE PRODUSER (
	KD_PRODUSER VARCHAR(50) PRIMARY KEY,
	NM_PRODUSER VARCHAR(50) NOT NULL,
	INTERNATIONAL VARCHAR(50) NOT NULL
);

CREATE TABLE NEGARA (
	KD_NEGARA VARCHAR(100) PRIMARY KEY,
	NM_NEGARA VARCHAR(100) NOT NULL
);

CREATE TABLE GENRE (
	KD_GENRE VARCHAR(50) PRIMARY KEY,
	NM_GENRE VARCHAR(50) NOT NULL
);

ALTER TABLE ARTIS
ADD CONSTRAINT FK_NEGARA FOREIGN KEY (NEGARA) REFERENCES NEGARA (KD_NEGARA);

ALTER TABLE FILE
RENAME TO FILM;

ALTER TABLE FILM
ADD CONSTRAINT FK_GENRE FOREIGN KEY (GENRE) REFERENCES GENRE (KD_GENRE),
ADD CONSTRAINT FK_ARTIS FOREIGN KEY (ARTIS) REFERENCES ARTIS (KD_ARTIS),
ADD CONSTRAINT FK_PRODUSER FOREIGN KEY (PRODUSER) REFERENCES PRODUSER (KD_PRODUSER);

INSERT INTO
	NEGARA ("kd_negara", "nm_negara")
VALUES
	('AS', 'AMERIKA SERIKAT'),
	('HK', 'HONGKONG'),
	('ID', 'INDONESIA'),
	('IN', 'INDIA');

INSERT INTO
	GENRE (KD_GENRE, NM_GENRE)
VALUES
	('G001', 'ACTION'),
	('G002', 'HORROR'),
	('G003', 'COMEDY'),
	('G004', 'DRAMA'),
	('G005', 'THRILLER'),
	('G006', 'FICTION');

INSERT INTO
	PRODUSER (KD_PRODUSER, NM_PRODUSER, INTERNATIONAL)
VALUES
	('PD01', 'MARVEL', 'YA'),
	('PD02', 'HONGKONG CINEMA', 'YA'),
	('PD03', 'RAPI FILM', 'TIDAK'),
	('PD04', 'PARKIT', 'TIDAK'),
	('PD05', 'PARAMOUNT PICTURE', 'YA');

INSERT INTO
	ARTIS (KD_ARTIS, NM_ARTIS, JK, BAYARAN, AWARD, NEGARA)
VALUES
	(
		'A001',
		'ROBERT DOWNEY JR',
		'PRIA',
		300000000,
		2,
		'AS'
	),
	(
		'A002',
		'ANGELINA JOLIE',
		'WANITA',
		700000000,
		1,
		'AS'
	),
	('A003', 'JACKIE CHAN', 'PRIA', 200000000, 7, 'HK'),
	('A004', 'JOE TASLIM', 'PRIA', 350000000, 1, 'ID'),
	(
		'A005',
		'CHELSEA ISLAN',
		'WANITA',
		300000000,
		0,
		'ID'
	);

ALTER TABLE FILM
ALTER COLUMN PENDAPATAN TYPE BIGINT;

INSERT INTO
	FILM (
		KD_FILM,
		NM_FILM,
		GENRE,
		ARTIS,
		PRODUSER,
		PENDAPATAN,
		NOMINASI
	)
VALUES
	(
		'F001',
		'IRON MAN',
		'G001',
		'A001',
		'PD01',
		2000000000,
		3
	),
	(
		'F002',
		'IRON MAN 2',
		'G001',
		'A001',
		'PD01',
		1800000000,
		2
	),
	(
		'F003',
		'IRON MAN 3',
		'G001',
		'A001',
		'PD01',
		1200000000,
		0
	),
	(
		'F004',
		'AVENGER:CIVIL WAR',
		'G001',
		'A001',
		'PD01',
		2000000000,
		1
	),
	(
		'F005',
		'SPIDERMAN HOME COMING',
		'G001',
		'A001',
		'PD01',
		1300000000,
		0
	),
	(
		'F006',
		'THE RAID',
		'G001',
		'A004',
		'PD03',
		800000000,
		5
	),
	(
		'F007',
		'FAST & FURIOUS',
		'G001',
		'A004',
		'PD05',
		830000000,
		2
	),
	(
		'F008',
		'HABIBIE DAN AINUN',
		'G004',
		'A005',
		'PD03',
		670000000,
		4
	),
	(
		'F009',
		'POLICE STORY',
		'G001',
		'A003',
		'PD02',
		700000000,
		3
	),
	(
		'F0010',
		'POLICE STORY 2',
		'G001',
		'A003',
		'PD02',
		710000000,
		1
	),
	(
		'F0011',
		'POLICE STORY 3',
		'G001',
		'A003',
		'PD02',
		615000000,
		0
	),
	(
		'F0012',
		'RUSH HOUR',
		'G003',
		'A003',
		'PD05',
		695000000,
		2
	),
	(
		'F0013',
		'KUNGFU PANDA',
		'G003',
		'A003',
		'PD05',
		923000000,
		5
	);

-- 1. Menampilkan jumlah pendapatan produser marvel secara keseluruhan											
SELECT
	B.NM_PRODUSER,
	SUM(A.PENDAPATAN) AS PENDAPATAN
FROM
	FILM A
	INNER JOIN PRODUSER B ON B.KD_PRODUSER = A.PRODUSER
WHERE
	B.NM_PRODUSER = UPPER('marvel')
GROUP BY
	B.NM_PRODUSER;

-- 2. Menampilkan nama film dan nominasi yang tidak mendapatkan nominasi
SELECT
	NM_FILM,
	NOMINASI
FROM
	FILM
WHERE
	NOMINASI = 0;

-- 3. Menampilkan nama film yang huruf depannya 'P'
SELECT
	NM_FILM
FROM
	FILM
WHERE
	NM_FILM LIKE 'P%';

-- 4. Menampilkan nama film yang huruf terakhir 'Y'
SELECT
	NM_FILM
FROM
	FILM
WHERE
	NM_FILM LIKE '%Y';

-- 5. Menampilkan nama film yang mengandung huruf 'D'
SELECT
	NM_FILM
FROM
	FILM
WHERE
	NM_FILM LIKE '%D%';

-- 6. Menampilkan nama film dan artis
SELECT
	A.NM_FILM,
	B.NM_ARTIS
FROM
	FILM A
	INNER JOIN ARTIS B ON A.ARTIS = B.KD_ARTIS;

-- 7. Menampilkan nama film yang artisnya berasal dari negara hongkong	
SELECT
	A.NM_FILM,
	C.KD_NEGARA
FROM
	FILM A
	INNER JOIN ARTIS B ON A.ARTIS = B.KD_ARTIS
	INNER JOIN NEGARA C ON C.KD_NEGARA = B.NEGARA
WHERE
	C.NM_NEGARA = 'HONGKONG';

-- 8. Menampilkan nama film yang artisnya bukan berasal dari negara yang mengandung huruf 'o'
-- ilike = case-insensitive
SELECT
	A.NM_FILM,
	C.NM_NEGARA
FROM
	FILM A
	INNER JOIN ARTIS B ON B.KD_ARTIS = A.ARTIS
	INNER JOIN NEGARA C ON C.KD_NEGARA = B.NEGARA
WHERE
	C.NM_NEGARA NOT ILIKE '%o%';

-- 	9. Menampilkan nama artis yang tidak pernah bermain film
SELECT
	B.NM_ARTIS
FROM
	ARTIS B
WHERE
	B.KD_ARTIS NOT IN (
		SELECT
			A.ARTIS
		FROM
			FILM A
	);

-- 10. Menampilkan nama artis yang bermain film dengan genre drama											
SELECT
	B.NM_ARTIS
FROM
	ARTIS B
WHERE
	B.KD_ARTIS IN (
		SELECT
			A.ARTIS
		FROM
			FILM A
			INNER JOIN GENRE C ON C.KD_GENRE = A.GENRE
		WHERE
			C.NM_GENRE ILIKE 'drama'
	);

-- 11. Menampilkan nama artis yang bermain film dengan genre Action
SELECT DISTINCT
	B.NM_ARTIS
FROM
	ARTIS B
	INNER JOIN FILM A ON A.ARTIS = B.KD_ARTIS
	INNER JOIN GENRE C ON C.KD_GENRE = A.GENRE
WHERE
	C.NM_GENRE ILIKE 'action';

-- 12. Menampilkan data negara dengan jumlah filmnya
SELECT
	A.KD_NEGARA,
	A.NM_NEGARA,
	COUNT(C.NM_FILM)
FROM
	NEGARA A
	FULL OUTER JOIN ARTIS B ON B.NEGARA = A.KD_NEGARA
	FULL OUTER JOIN FILM C ON C.ARTIS = B.KD_ARTIS
GROUP BY
	A.KD_NEGARA
ORDER BY
	A.NM_NEGARA ASC;

-- 13. Menampilkan nama film yang skala internasional
SELECT
	A.NM_FILM
FROM
	FILM A
	INNER JOIN PRODUSER B ON B.KD_PRODUSER = A.PRODUSER
WHERE
	B.INTERNATIONAL ILIKE '%ya%';

-- 14. Menampilkan jumlah film dari masing2 produser
SELECT
	A.NM_PRODUSER,
	COUNT(B.NM_FILM) AS JUMLAH_FILM
FROM
	PRODUSER A
	FULL OUTER JOIN FILM B ON B.PRODUSER = A.KD_PRODUSER
GROUP BY
	A.KD_PRODUSER
ORDER BY
	NM_PRODUSER ASC;